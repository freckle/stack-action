name: Stack
description: Build, test, and lint a stack-based Haskell project
inputs:
  working-directory:
    description: "Working directory for run commands"
    required: true
    default: .
  stack-yaml:
    description: "Override stack.yaml, relative to working-directory"
    required: true
    default: stack.yaml
  stack-arguments:
    description: "Additional arguments for stack invocations"
    required: true
    default: ''
  hlint:
    description: "Run HLint"
    required: true
    default: true
  weeder:
    description: "Run Weeder"
    required: true
    default: true
outputs: {}
runs:
  using: composite
  steps:
    - name: Setup
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
          stack setup

          if ${{ inputs.hlint }}; then
            stack install --copy-compiler-tool hlint
          fi

          if ${{ inputs.weeder }}; then
            stack install --copy-compiler-tool weeder
          fi

    - name: Dependencies
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
          stack --no-terminal --stack-yaml ${{ inputs.stack-yaml }} \
            build --dependencies-only --test --no-run-tests \
            ${{ inputs.stack-arguments }}

    - name: Build
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
          stack --no-terminal --stack-yaml ${{ inputs.stack-yaml }} \
            build --fast --pedantic --test --no-run-tests \
            ${{ inputs.stack-arguments }}

    - name: Test
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
          stack --no-terminal --stack-yaml ${{ inputs.stack-yaml }} \
            build --fast --pedantic --test \
            ${{ inputs.stack-arguments }}

    - name: Lint
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
          if ${{ inputs.hlint }}; then
            stack exec hlint .
          fi

          if ${{ inputs.weeder }}; then
            stack exec weeder
          fi
